---
name: ðŸš¦ In-place Color Sort
about: Solve the in-place color sorting problem (single pass, no built-in sort)
title: "[Algo] In-place Color Sort"
labels: algorithm, help wanted
assignees: 'mohshin-shah'

---

## ðŸ§© Problem: Statement of the problem

Given an array `nums` containing `n` elements where each element is an integer representing a color:

- `0` â†’ red  
- `1` â†’ white  
- `2` â†’ blue

Sort the array **in-place** so that all elements of the same color are adjacent, with the colors appearing in the order **red (0)**, **white (1)**, and **blue (2)**.

The solution must use **only one pass** through the array and **must not use any built-in sort functions**.

---

### ðŸ§ª Examples:

**Input:**  
`nums = [2, 0, 2, 1, 1, 0]`  
**Output:**  
`[0, 0, 1, 1, 2, 2]`

**Input:**  
`nums = [2, 0, 1]`  
**Output:**  
`[0, 1, 2]`

---

### âœ… Constraints:

- `n == nums.length`
- `1 <= n <= 300`
- `nums[i]` is either `0`, `1`, or `2`
- Must sort the array **in-place**
- Must solve the problem **in one pass**

---
